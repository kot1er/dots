#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# -----  misc  ----- #
xss-lock -- dm-tool lock &
setxkbmap -layout "us,il,us(rus)"  -option "grp:alt_shift_toggle"
feh --bg-fill ~/img/wall2.png
pkill polybar
polybar main &
picom &
xss-lock "dm-tool lock"

# ---- keybinds ---- #
hc keyunbind --all  # remove all existing keybindings

Mod=Mod4            # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn alacritty
hc keybind $Mod-p spawn rofi -show drun
hc keybind Print spawn screenshot
hc keybind $Mod-Print spawn screencap 

# focus
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# window movement
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# tags
tag_names=( {1..6} )
tag_keys=( {1..6} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" chain , move_index "$i" , use_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-Next use_index +1 --skip-visible
hc keybind $Mod-Prior  use_index -1 --skip-visible

# layouting
hc keybind $Mod-c remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle

# cycle layouts in a frame
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
#hc keybind $Mod- cycle
hc keybind $Mod-i jumpto urgent

# ---- theme ---- #
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_bg_transparent 1
hc set frame_border_width 0         #keep these two
hc set frame_border_inner_width 0
hc set window_gap 5 
hc pad 0 36 6 6 6

hc attr theme.inner_width 3
hc attr theme.border_width 10        # window border width
hc attr theme.floating.border_width 0
hc attr theme.floating.outer_width 1

hc attr theme.active.color '#33352a'
hc attr theme.normal.color '#33352a'
hc attr theme.active.inner_color '#b0b28e'
hc attr theme.normal.inner_color '#4e523d'
hc attr theme.active.outer_color '#a6b3b5'
hc attr theme.background_color '#141414'


# ---- rules ---- #
hc unrule -F
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

hc unlock

